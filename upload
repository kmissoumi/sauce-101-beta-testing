#!/bin/bash
#
# Kareem Missoumi
# kareem@missoumi.org
#
# This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.
#
# TestFairy Upload Wrapper


timeStamp=$(date +"%Y-%m-%d_%H%M%S_%s")
timeEpoch=$(date +%s)
scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
baseDir=$( echo "${scriptPath%/*}" )

testFairyEndpoint="api.testfairy.com"
protoHost="https://${testFairyEndpoint}"


function load_lib {
  f="${scriptPath}/quicksauce-lib"
  [[ -f "${f}" ]] && source ${f}
}


function testfairy_upload {

    printf "\nUploading ${appName} ${appVersion}..."

    curlOptions="--silent --write-out "'\n%{http_code}'""
    #curlOptions="--write-out "'\n%{http_code}'""

    r=$(curl ${protoHost}/api/upload ${curlOptions} \
            --form api_key=${TESTFAIRY_API_KEY} \
            --form file=@$(json_kv_get appFile) \
            --form platform=$(json_kv_get platform) \
            --form package_name=$(json_kv_get packageName) \
            --form release_notes="$(json_kv_get releaseNotes)" \
            --form tags="$(json_kv_get tags)" \
            --form folder_name=$(json_kv_get folderName) \
            --form auto_update=$(json_kv_get autoUpdate) \
            --form notify=$(json_kv_get notify) \
            --form upload_to_saucelabs=$(json_kv_get uploadSauceStorage) \
            --form groups="$(json_kv_get groups)" \
            --form app_version=${appVersion} \
            --form app_name="${appName}")

    curlRc=$?
    testFairyUploadHttpStatus="${r##*$'\n'}"
    testFairyUploadR="${r%????}"
    testFairyUploadCode=$(jq --raw-output '.code' <<< ${testFairyUploadR})
    testFairyUploadStatus=$(jq --raw-output '.status' <<< ${testFairyUploadR})

    [[ ${testFairyUploadHttpStatus} == "200" ]] || log_error "testFairyUploadHttpStatus: %s" ${testFairyUploadHttpStatus}
    [[ ${testFairyUploadStatus} == "ok" ]] && printf "%s" "Done!" || exit 127

    testFairyUploadR=$(jq  --arg httpStatus ${testFairyUploadHttpStatus} '. += {"httpStatus": $httpStatus}' <<< "${testFairyUploadR}")
    testFairyUploadR=$(jq  --arg curlRc ${curlRc} '. += {"curlRc": $curlRc}' <<< "${testFairyUploadR}")

    # check the response status & open a bowser on success
    landingPageURL=$(jq --raw-output '.landing_page_url' <<< ${testFairyUploadR})

    printf "\t landingPageUrl: %s\n" ${landingPageURL}
    log_json_debug testFairyUploadR "testFairyUploadR-${appName}-${appVersion}"

    exit 0
} 


load_lib

[[ -f ${1} ]] && appMetaData=$(jq '.' ${1})
[[ -z ${2} ]] && appVersion=$(json_kv_get appVersion) || appVersion=${2} 
appName="$(json_kv_get appName)"
testfairy_upload

exit 4